def is_friend(name):
    if name[0]=="D":
       return True
    elif name[0]=="N":
       return True
    return False
print is_friend('Diane')
print is_friend('Nina')

# Define a procedure, biggest, that takes three
# numbers as inputs and returns the largest of
# those three numbers.
def biggest(a,b,c):
    if a>b:
       if a>c:
          return a
       else: 
          return c
    else: 
       if c<b:
          return b
       else:
          return c
print biggest(2,3,4)
print biggest(2,4,4)

# Define a procedure, print_numbers, that takes
# as input a positive whole number, and prints 
# out all the whole numbers from 1 to the input
# number.

# Make sure your procedure prints "upwards", so
# from 1 up to the input number.
def a(i):
  while i>0:
    print i
    i=i-1
print a(3)

def print_numbers(n):# while loop print numbers i<n
   i=1
   while i<n:
     print i
     i=i+1
print_numbers(4)
#
def print_numbers(n):
   i=0
   while i<n:
     i=i+1
     print i
print_numbers(3)

# Define a procedure, factorial, that
# takes one number as its input
# and returns the factorial of
# that number.

def factorial(n):
   i=1
   p=1
   while i<=n:
       p=p*i
       i=i+1
       print p
#factorial(4)
#
def factorial(n):
   i=1
   p=1
   while i<=n:
       p=p*i
       i=i+1
   print p
   # different 'print' location
#factorial(52)
def factorial(n):
   result=1
   while n>=1:
       result=result*n
       n=n-1
   return result
#print factorial(6)

def get_next_target(page):
    start_link=page.find('<a href=')
    if start_link==-1:
       return None,0
    start_quote=page.find('''', start_link)
    end_quote=page.find('''', start_quote+1)
    url=page[start_quote+1:end_quote]
    return url,end_quote
url,endpos=get_next_target()
def print_all_links(page)
    while True:
       url,endpos=get_next_target(page)
       if url:
          print url
          page=page[endops:]
       else:
           break
 print_all_links()



